{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hostingEnvironment": {
            "type": "string",
            "allowedValues": [
                "linux",
                "windows"
            ]            
        },
        "deploymentType": {
            "type": "string",
            "defaultValue": "dev",
            "allowedValues": [
                "dev",
                "prod"
            ]
        },
        "appName": {
            "type": "string"
        },
        "appSku": {
            "type": "string"
        },
        "appWorkerSize": {
            "type": "string"
        },
        "appStorageAccountSize": {
            "type": "string"
        },
        "storageSku": {
            "type": "string"
        },
        "storageTier": {
            "type": "string"
        },
        "accessTier": {
            "type": "string"
        },
        "enableAutomaticFailover": {
            "type": "bool"
        },
        "enableMultipleWriteLocations": {
            "type": "bool"
        },
        "isVirtualNetworkFilterEnabled": {
            "type": "bool"
        },
        "isZoneRedundant": {
            "type": "bool"
        },
        "databaseAccountsName": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues":[
                "eastus",
                "westus"
            ],
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "queueStorageAccountsName": {
            "type": "string"
        },
        "insights": {
            "type": "string"
        },    
        "resourcePrefix": {
            "type": "string"
        },
        "tag_owner": {
            "type": "string"
        }                      
    },

    "variables": Â {
        "functionAppName": "[parameters('appName')]",
        "queueName": "js-queue-items",
        "prodFunctionName": "producer",
        "consFunctionName": "consumer",
        "hostingPlanName": "[concat(parameters('appName'), '-plan')]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'functions')]",
        "applicationInsightsName": "[concat(parameters('appName'), '-insights')]",
        "databaseConnectionString": "[concat(parameters('databaseAccountsName'), '_DOCUMENTDB')]",
        "sourceCodeRepositoryURL": "https://github.com/alenfdz/AppFunction",
        "sourceCodeBranch": "master"
    },

    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-11-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('appStorageAccountSize')]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-11-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku":{
                "name": "[parameters('appSku')]"
            },
            "properties": {
                "workerSize": "[parameters('appWorkerSize')]",
                "numberOfWorkers": 1
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('queueStorageAccountsName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageSku')]",
                "tier": "[parameters('storageTier')]"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "[parameters('accessTier')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('queueStorageAccountsName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('queueStorageAccountsName'))]"
            ],
            "sku": {
                "name": "[parameters('storageSku')]"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },        
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2019-08-01",
            "name": "[parameters('databaseAccountsName')]",
            "location": "[parameters('location')]",
            "tags": {
                "defaultExperience": "Azure Cosmos DB for MongoDB API",
                "hidden-cosmos-mmspecial": "",
                "Owner": "[parameters('tag_owner')]"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "enableAutomaticFailover": "[parameters('enableAutomaticFailover')]",
                "enableMultipleWriteLocations": "[parameters('enableMultipleWriteLocations')]",
                "isVirtualNetworkFilterEnabled": "[parameters('isVirtualNetworkFilterEnabled')]",
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "West Europe",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": "[parameters('isZoneRedundant')]"
                    }
                ],
                "capabilities": []
            }           
        },
        {
            "apiVersion": "2018-11-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountsName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('queueStorageAccountsName'))]"
            ],
            "properties": {
                "name": "[variables('functionAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "clientAffinityEnabled": false,
                "hostingEnvironment": "[parameters('hostingEnvironment')]",
                "siteConfig": {
                    "alwaysOn": true,
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    },
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-11-01').keys[0].value,';')]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-11-01').keys[0].value,';')]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~10"
                        }
                    ]
                }
            },
            "resources": [{
                "apiVersion": "2018-11-01",
                "name": "web",
                "type": "sourcecontrols",
                "dependsOn": [
                    "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
                ],
                "properties": {
                    "RepoUrl": "[variables('sourceCodeRepositoryURL')]",
                    "branch": "[variables('sourceCodeBranch')]",
                    "IsManualIntegration": false
                }
            }],
            "tags": {
                "Owner": "[parameters('tag_owner')]"
            }            
        },      
        {
            "name": "[variables('applicationInsightsName')]",
            "condition": "[equals(parameters('insights'),'yes')]",
            "type": "Microsoft.Insights/components",
            "location": "[parameters('location')]",
            "apiVersion": "2014-04-01",
            "kind": "other",
            "properties": {
                "applicationId": "[variables('applicationInsightsName')]"
            }
        }
    ],
    "outputs": {
        "databasePrimaryKey": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountsName')), '2015-04-08').primaryMasterKey]"
        },
        "functionEndpoint":{
            "type": "string",
            "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/', variables('prodFunctionName'))]"
        }        
    }
}